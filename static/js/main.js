'use strict'

$(function() {

  // blur after a nav click
  $('a.covert, nav a').focus(function(){
    $(this).blur()
  })

  waitForWebfonts(['neuropol'], () => {
    $('.landingtext').fadeIn(1500)
  })

})

window.travelTeams = "";
window.travelTeamData = "keyIyMnJ4vaGFuckBzdHVkZW50cy5oYXJrZXIub3JnIjoicnIiLCIyMmFpZGFubEBzdHVkZW50cy5oYXJrZXIub3JnIjoiYWwiLCIyMmFuaXNoa2FyQHN0dWRlbnRzLmhhcmtlci5vcmciOiJhciIsIjIxYW5nZWxhY0BzdHVkZW50cy5oYXJrZXIub3JnIjoiYWMiLCIyMmFsaWNlZkBzdHVkZW50cy5oYXJrZXIub3JnIjoiYWYiLCIyMHNoYWxpbmlyQHN0dWRlbnRzLmhhcmtlci5vcmciOiJzciIsIjIzYXJpYWpAc3R1ZGVudHMuaGFya2VyLm9yZyI6ImFqIiwiMjBzYWhpbGdAc3R1ZGVudHMuaGFya2VyLm9yZyI6InNnIiwiMjFjaGxvZWFAc3R1ZGVudHMuaGFya2VyLm9yZyI6ImEiLCIyMWhhcmliQHN0dWRlbnRzLmhhcmtlci5vcmciOiJhIiwiMjNlbW1hYkBzdHVkZW50cy5oYXJrZXIub3JnIjoiYSIsIjIyZXRoYW5jQHN0dWRlbnRzLmhhcmtlci5vcmciOiJhIiwiMjNicmlhbmNAc3R1ZGVudHMuaGFya2VyLm9yZyI6ImEiLCIyMnphY2hjQHN0dWRlbnRzLmhhcmtlci5vcmciOiJhIiwiMjJhcmp1bmRAc3R1ZGVudHMuaGFya2VyLm9yZyI6ImEiLCIyMGZpbm5mQHN0dWRlbnRzLmhhcmtlci5vcmciOiJhIiwiMjJhZGhlZXRnQHN0dWRlbnRzLmhhcmtlci5vcmciOiJhIiwiMjJkZW5uaXNnQHN0dWRlbnRzLmhhcmtlci5vcmciOiJhIiwiMjJzaG91bmFrZ0BzdHVkZW50cy5oYXJrZXIub3JnIjoiYSIsIjIycHJhbmF2Z0BzdHVkZW50cy5oYXJrZXIub3JnIjoiYSIsIjIycHJha3JpdGpAc3R1ZGVudHMuaGFya2VyLm9yZyI6ImEiLCIyMWFydGh1cmpAc3R1ZGVudHMuaGFya2VyLm9yZyI6ImEiLCIyMmFuZ2llakBzdHVkZW50cy5oYXJrZXIub3JnIjoiYSIsIjIzbGF1cmllakBzdHVkZW50cy5oYXJrZXIub3JnIjoiYSIsIjIyY2hpcmFna0BzdHVkZW50cy5oYXJrZXIub3JnIjoiYSIsIjIwamF0aW5rQHN0dWRlbnRzLmhhcmtlci5vcmciOiJhIiwiMjJhbmlydWRoa0BzdHVkZW50cy5oYXJrZXIub3JnIjoiYSIsIjIxYW5raXRha0BzdHVkZW50cy5oYXJrZXIub3JnIjoiYSIsIjIyc2hhaHplYmxAc3R1ZGVudHMuaGFya2VyLm9yZyI6ImEiLCIyMmFsZXhsQHN0dWRlbnRzLmhhcmtlci5vcmciOiJhIiwiMjJrYXRlb0BzdHVkZW50cy5oYXJrZXIub3JnIjoiYSIsIjIyYW5pc2hwQHN0dWRlbnRzLmhhcmtlci5vcmciOiJhIiwiMjNhZGFwQHN0dWRlbnRzLmhhcmtlci5vcmciOiJhIiwiMjBzYW5qYXlyQHN0dWRlbnRzLmhhcmtlci5vcmciOiJhIiwiMjNhcml5YXJAc3R1ZGVudHMuaGFya2VyLm9yZyI6ImEiLCIyMHJvaGFuc0BzdHVkZW50cy5oYXJrZXIub3JnIjoiYSIsIjIxYXlkaW50QHN0dWRlbnRzLmhhcmtlci5vcmciOiJhIiwiMjJtaWNoYWVsdEBzdHVkZW50cy5oYXJrZXIub3JnIjoiYSIsIjIycHJhbmF2dkBzdHVkZW50cy5oYXJrZXIub3JnIjoiYSIsIjIxYWRpdGl2QHN0dWRlbnRzLmhhcmtlci5vcmciOiJhIiwiMjJhaW1lZXdAc3R1ZGVudHMuaGFya2VyLm9yZyI6ImEiLCIyMmNvbm5vcndAc3R1ZGVudHMuaGFya2VyLm9yZyI6ImEiLCIyMmFsaW5heUBzdHVkZW50cy5oYXJrZXIub3JnIjoiYSIsIjIyZ2xvcmlhekBzdHVkZW50cy5oYXJrZXIub3JnIjoiYSJ9";
window.decode = function(x) {return JSON.parse(atob(x.substring(1,8) + x.substring(9)));}

function waitForWebfonts(fonts, callback) {
    var loadedFonts = 0;
    for(var i = 0, l = fonts.length; i < l; ++i) {
        (function(font) {
            var node = document.createElement('span');
            // Characters that vary significantly among different fonts
            node.innerHTML = 'giItT1WQy@!-/#';
            // Visible - so we can measure it - but not on the screen
            node.style.position      = 'absolute';
            node.style.left          = '-10000px';
            node.style.top           = '-10000px';
            // Large font size makes even subtle changes obvious
            node.style.fontSize      = '300px';
            // Reset any font properties
            node.style.fontFamily    = 'sans-serif';
            node.style.fontVariant   = 'normal';
            node.style.fontStyle     = 'normal';
            node.style.fontWeight    = 'normal';
            node.style.letterSpacing = '0';
            document.body.appendChild(node);

            // Remember width with no applied web font
            var width = node.offsetWidth;

            node.style.fontFamily = font;

            var interval;
            function checkFont() {
                // Compare current width with original width
                if(node && node.offsetWidth != width) {
                    ++loadedFonts;
                    node.parentNode.removeChild(node);
                    node = null;
                }

                // If all fonts have been loaded
                if(loadedFonts >= fonts.length) {
                    if(interval) {
                        clearInterval(interval);
                    }
                    if(loadedFonts == fonts.length) {
                        callback();
                        return true;
                    }
                }
            };

            if(!checkFont()) {
                interval = setInterval(checkFont, 50);
            }
        })(fonts[i]);
    }
};


function handleXHRError(xhr) {
  console.error(xhr)
  if (xhr && xhr.responseJSON && xhr.responseJSON.error) alert(xhr.responseJSON.error.message)
  else if (xhr && xhr.responseJSON) {
    alert('An error occured.')
    console.error(xhr.responseJSON.error)
  }
  else if (xhr && xhr.responseText) {
    alert('An error occured.')
    console.error(xhr.responseText)
  }
}
